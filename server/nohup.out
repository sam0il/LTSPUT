[dotenv@17.2.1] injecting env (4) from .env -- tip: ⚙️  write to custom object with { processEnv: myObject }
/home/studenti/famnit/89231015/Desktop/LTSPUT/server/index.js:67
    key: fs.readFileSync('key.pem'),
         ^

ReferenceError: fs is not defined
    at Object.<anonymous> (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/index.js:67:10)
    at Module._compile (node:internal/modules/cjs/loader:1101:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Function.Module._load (node:internal/modules/cjs/loader:822:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)
    at node:internal/main/run_main_module:17:47
[dotenv@17.2.1] injecting env (4) from .env -- tip: ⚙️  write to custom object with { processEnv: myObject }
https server listening on port 5022
Connection to database SISIII2025_ 89231015 established!
Executing SQL: 
        SELECT t.id, t.name, t.category,
               ROUND(AVG(r.stars), 2) AS avg_stars,
               CASE 
                   WHEN AVG(r.stars) >= 4.5 AND COUNT(r.id) >= 3 THEN 1
                   ELSE 0
               END AS has_badge
        FROM SISIII2025_89231015_technicians t
        LEFT JOIN SISIII2025_89231015_ratings r ON t.id = r.technician_id
        WHERE 1=1
     GROUP BY t.id, t.name, t.category
With params: []
DB Query returned rows: 11
Executing SQL: 
        SELECT t.id, t.name, t.category,
               ROUND(AVG(r.stars), 2) AS avg_stars,
               CASE 
                   WHEN AVG(r.stars) >= 4.5 AND COUNT(r.id) >= 3 THEN 1
                   ELSE 0
               END AS has_badge
        FROM SISIII2025_89231015_technicians t
        LEFT JOIN SISIII2025_89231015_ratings r ON t.id = r.technician_id
        WHERE 1=1
     GROUP BY t.id, t.name, t.category
With params: []
DB Query returned rows: 11
Executing SQL: 
        SELECT t.id, t.name, t.category,
               ROUND(AVG(r.stars), 2) AS avg_stars,
               CASE 
                   WHEN AVG(r.stars) >= 4.5 AND COUNT(r.id) >= 3 THEN 1
                   ELSE 0
               END AS has_badge
        FROM SISIII2025_89231015_technicians t
        LEFT JOIN SISIII2025_89231015_ratings r ON t.id = r.technician_id
        WHERE 1=1
     GROUP BY t.id, t.name, t.category
With params: []
DB Query returned rows: 11
Executing SQL: 
        SELECT t.id, t.name, t.category,
               ROUND(AVG(r.stars), 2) AS avg_stars,
               CASE 
                   WHEN AVG(r.stars) >= 4.5 AND COUNT(r.id) >= 3 THEN 1
                   ELSE 0
               END AS has_badge
        FROM SISIII2025_89231015_technicians t
        LEFT JOIN SISIII2025_89231015_ratings r ON t.id = r.technician_id
        WHERE 1=1
     GROUP BY t.id, t.name, t.category
With params: []
DB Query returned rows: 11
Executing SQL: 
        SELECT t.id, t.name, t.category,
               ROUND(AVG(r.stars), 2) AS avg_stars,
               CASE 
                   WHEN AVG(r.stars) >= 4.5 AND COUNT(r.id) >= 3 THEN 1
                   ELSE 0
               END AS has_badge
        FROM SISIII2025_89231015_technicians t
        LEFT JOIN SISIII2025_89231015_ratings r ON t.id = r.technician_id
        WHERE 1=1
     GROUP BY t.id, t.name, t.category
With params: []
DB Query returned rows: 11
Executing SQL: 
        SELECT t.id, t.name, t.category,
               ROUND(AVG(r.stars), 2) AS avg_stars,
               CASE 
                   WHEN AVG(r.stars) >= 4.5 AND COUNT(r.id) >= 3 THEN 1
                   ELSE 0
               END AS has_badge
        FROM SISIII2025_89231015_technicians t
        LEFT JOIN SISIII2025_89231015_ratings r ON t.id = r.technician_id
        WHERE 1=1
     AND t.name LIKE ? GROUP BY t.id, t.name, t.category
With params: [ '%s%' ]
Executing SQL: 
        SELECT t.id, t.name, t.category,
               ROUND(AVG(r.stars), 2) AS avg_stars,
               CASE 
                   WHEN AVG(r.stars) >= 4.5 AND COUNT(r.id) >= 3 THEN 1
                   ELSE 0
               END AS has_badge
        FROM SISIII2025_89231015_technicians t
        LEFT JOIN SISIII2025_89231015_ratings r ON t.id = r.technician_id
        WHERE 1=1
     AND t.name LIKE ? GROUP BY t.id, t.name, t.category
With params: [ '%sa%' ]
DB Query returned rows: 2
DB Query returned rows: 1
Executing SQL: 
        SELECT t.id, t.name, t.category,
               ROUND(AVG(r.stars), 2) AS avg_stars,
               CASE 
                   WHEN AVG(r.stars) >= 4.5 AND COUNT(r.id) >= 3 THEN 1
                   ELSE 0
               END AS has_badge
        FROM SISIII2025_89231015_technicians t
        LEFT JOIN SISIII2025_89231015_ratings r ON t.id = r.technician_id
        WHERE 1=1
     AND t.name LIKE ? GROUP BY t.id, t.name, t.category
With params: [ '%sa%' ]
DB Query returned rows: 1
Executing SQL: 
        SELECT t.id, t.name, t.category,
               ROUND(AVG(r.stars), 2) AS avg_stars,
               CASE 
                   WHEN AVG(r.stars) >= 4.5 AND COUNT(r.id) >= 3 THEN 1
                   ELSE 0
               END AS has_badge
        FROM SISIII2025_89231015_technicians t
        LEFT JOIN SISIII2025_89231015_ratings r ON t.id = r.technician_id
        WHERE 1=1
     GROUP BY t.id, t.name, t.category
With params: []
DB Query returned rows: 11
Executing SQL: 
        SELECT t.id, t.name, t.category,
               ROUND(AVG(r.stars), 2) AS avg_stars,
               CASE 
                   WHEN AVG(r.stars) >= 4.5 AND COUNT(r.id) >= 3 THEN 1
                   ELSE 0
               END AS has_badge
        FROM SISIII2025_89231015_technicians t
        LEFT JOIN SISIII2025_89231015_ratings r ON t.id = r.technician_id
        WHERE 1=1
     GROUP BY t.id, t.name, t.category
With params: []
DB Query returned rows: 11
Executing SQL: 
        SELECT t.id, t.name, t.category,
               ROUND(AVG(r.stars), 2) AS avg_stars,
               CASE 
                   WHEN AVG(r.stars) >= 4.5 AND COUNT(r.id) >= 3 THEN 1
                   ELSE 0
               END AS has_badge
        FROM SISIII2025_89231015_technicians t
        LEFT JOIN SISIII2025_89231015_ratings r ON t.id = r.technician_id
        WHERE 1=1
     GROUP BY t.id, t.name, t.category
With params: []
DB Query returned rows: 11
Executing SQL: 
        SELECT t.id, t.name, t.category,
               ROUND(AVG(r.stars), 2) AS avg_stars,
               CASE 
                   WHEN AVG(r.stars) >= 4.5 AND COUNT(r.id) >= 3 THEN 1
                   ELSE 0
               END AS has_badge
        FROM SISIII2025_89231015_technicians t
        LEFT JOIN SISIII2025_89231015_ratings r ON t.id = r.technician_id
        WHERE 1=1
     GROUP BY t.id, t.name, t.category
With params: []
DB Query returned rows: 11
Executing SQL: 
        SELECT t.id, t.name, t.category,
               ROUND(AVG(r.stars), 2) AS avg_stars,
               CASE 
                   WHEN AVG(r.stars) >= 4.5 AND COUNT(r.id) >= 3 THEN 1
                   ELSE 0
               END AS has_badge
        FROM SISIII2025_89231015_technicians t
        LEFT JOIN SISIII2025_89231015_ratings r ON t.id = r.technician_id
        WHERE 1=1
     GROUP BY t.id, t.name, t.category
With params: []
DB Query returned rows: 11
Executing SQL: 
        SELECT t.id, t.name, t.category,
               ROUND(AVG(r.stars), 2) AS avg_stars,
               CASE 
                   WHEN AVG(r.stars) >= 4.5 AND COUNT(r.id) >= 3 THEN 1
                   ELSE 0
               END AS has_badge
        FROM SISIII2025_89231015_technicians t
        LEFT JOIN SISIII2025_89231015_ratings r ON t.id = r.technician_id
        WHERE 1=1
     GROUP BY t.id, t.name, t.category
With params: []
DB Query error: Error: Can't add new command when connection is in closed state
    at Connection._addCommandClosedState (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/node_modules/mysql2/lib/base/connection.js:159:17)
    at Connection.query (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/node_modules/mysql2/lib/base/connection.js:571:17)
    at /home/studenti/famnit/89231015/Desktop/LTSPUT/server/config/db.js:87:14
    at new Promise (<anonymous>)
    at Object.dataPool.getFilteredTechnicians (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/config/db.js:83:12)
    at /home/studenti/famnit/89231015/Desktop/LTSPUT/server/routes/user.js:88:38
    at Layer.handleRequest (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/node_modules/router/lib/layer.js:152:17)
    at next (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/node_modules/router/lib/route.js:157:13)
    at Route.dispatch (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/node_modules/router/lib/route.js:117:3)
    at handle (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/node_modules/router/index.js:435:11) {
  fatal: true
}
Error fetching technicians: Error: Can't add new command when connection is in closed state
    at Connection._addCommandClosedState (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/node_modules/mysql2/lib/base/connection.js:159:17)
    at Connection.query (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/node_modules/mysql2/lib/base/connection.js:571:17)
    at /home/studenti/famnit/89231015/Desktop/LTSPUT/server/config/db.js:87:14
    at new Promise (<anonymous>)
    at Object.dataPool.getFilteredTechnicians (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/config/db.js:83:12)
    at /home/studenti/famnit/89231015/Desktop/LTSPUT/server/routes/user.js:88:38
    at Layer.handleRequest (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/node_modules/router/lib/layer.js:152:17)
    at next (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/node_modules/router/lib/route.js:157:13)
    at Route.dispatch (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/node_modules/router/lib/route.js:117:3)
    at handle (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/node_modules/router/index.js:435:11) {
  fatal: true
}
[dotenv@17.2.1] injecting env (4) from .env -- tip: ⚙️  override existing env vars with { override: true }
https server listening on port 5022
Connection to database SISIII2025_ 89231015 established!
Registration error: Error: Duplicate entry 'klen6' for key 'name'
    at Packet.asError (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/node_modules/mysql2/lib/packets/packet.js:740:17)
    at Query.execute (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/node_modules/mysql2/lib/commands/command.js:29:26)
    at Connection.handlePacket (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/node_modules/mysql2/lib/base/connection.js:475:34)
    at PacketParser.onPacket (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/node_modules/mysql2/lib/base/connection.js:93:12)
    at PacketParser.executeStart (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/node_modules/mysql2/lib/packet_parser.js:75:16)
    at Socket.<anonymous> (/home/studenti/famnit/89231015/Desktop/LTSPUT/server/node_modules/mysql2/lib/base/connection.js:100:25)
    at Socket.emit (node:events:390:28)
    at addChunk (node:internal/streams/readable:315:12)
    at readableAddChunk (node:internal/streams/readable:289:9)
    at Socket.Readable.push (node:internal/streams/readable:228:10) {
  code: 'ER_DUP_ENTRY',
  errno: 1062,
  sqlState: '23000',
  sqlMessage: "Duplicate entry 'klen6' for key 'name'",
  sql: "INSERT INTO SISIII2025_89231015_users (id, name, password) VALUES (NULL, 'klen6', '1234')"
}
Executing SQL: 
        SELECT t.id, t.name, t.category,
               ROUND(AVG(r.stars), 2) AS avg_stars,
               CASE 
                   WHEN AVG(r.stars) >= 4.5 AND COUNT(r.id) >= 3 THEN 1
                   ELSE 0
               END AS has_badge
        FROM SISIII2025_89231015_technicians t
        LEFT JOIN SISIII2025_89231015_ratings r ON t.id = r.technician_id
        WHERE 1=1
     GROUP BY t.id, t.name, t.category
With params: []
DB Query returned rows: 11
Executing SQL: 
        SELECT t.id, t.name, t.category,
               ROUND(AVG(r.stars), 2) AS avg_stars,
               CASE 
                   WHEN AVG(r.stars) >= 4.5 AND COUNT(r.id) >= 3 THEN 1
                   ELSE 0
               END AS has_badge
        FROM SISIII2025_89231015_technicians t
        LEFT JOIN SISIII2025_89231015_ratings r ON t.id = r.technician_id
        WHERE 1=1
     GROUP BY t.id, t.name, t.category
With params: []
DB Query returned rows: 11
Executing SQL: 
        SELECT t.id, t.name, t.category,
               ROUND(AVG(r.stars), 2) AS avg_stars,
               CASE 
                   WHEN AVG(r.stars) >= 4.5 AND COUNT(r.id) >= 3 THEN 1
                   ELSE 0
               END AS has_badge
        FROM SISIII2025_89231015_technicians t
        LEFT JOIN SISIII2025_89231015_ratings r ON t.id = r.technician_id
        WHERE 1=1
     GROUP BY t.id, t.name, t.category
With params: []
DB Query returned rows: 12
Executing SQL: 
        SELECT t.id, t.name, t.category,
               ROUND(AVG(r.stars), 2) AS avg_stars,
               CASE 
                   WHEN AVG(r.stars) >= 4.5 AND COUNT(r.id) >= 3 THEN 1
                   ELSE 0
               END AS has_badge
        FROM SISIII2025_89231015_technicians t
        LEFT JOIN SISIII2025_89231015_ratings r ON t.id = r.technician_id
        WHERE 1=1
     GROUP BY t.id, t.name, t.category
With params: []
DB Query returned rows: 12
